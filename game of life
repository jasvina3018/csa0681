def game_of_life(board):
    # Neighbors array to find 8 neighboring cells for a given cell
    neighbors = [(1, 0), (1, 1), (0, 1), (-1, 1), (-1, 0), (-1, -1), (0, -1), (1, -1)
    rows = len(board)
    cols = len(board[0])
    copy_board = [[board[row][col] for col in range(cols)] for row in range(rows)   
    for row in range(rows):
        for col in range(cols):
            live_neighbors = 0
            for neighbor in neighbors:
                r = row + neighbor[0]
                c = col + neighbor[1]
                if (0 <= r < rows) and (0 <= c < cols) and (copy_board[r][c] == 1):
                    live_neighbors += 1
            if copy_board[row][col] == 1 and (live_neighbors < 2 or live_neighbors > 3):
                board[row][col] = 0
            if copy_board[row][col] == 0 and live_neighbors == 3:
                board[row][col] = 1

    return board
board = [
    [0, 1, 0],
    [0, 0, 1],
    [1, 1, 1],
    [0, 0, 0]
]
new_state = game_of_life(board)
print(new_state)
